//@version=3
study("4 MA Strategy Indicator", overlay=true) 

/////////////////////////////////////////////////////
// ************ 4 MA Strategy Indicator - v0.3 **************** 
///////////////////////////////////////////////////// 

openPositionSize = 0.0 
openPositionSize := nz(openPositionSize[1], 0.0)   

//maxidf = input(title="Max Intraday Filled Orders", defval=10) 
//strategy.risk.max_intraday_filled_orders(maxidf)

traderType = input(title="Trader Type", defval="All", options=["All", "Longs Only"])
shortestPeriod = input(title="Shortest Period",type=integer,defval=8)
shortPeriod = input(title="Short Period",type=integer,defval=13)
mediumPeriod = input(title="Medium Period",type=integer,defval=21)
longestPeriod = input(title="Longest Period",type=integer,defval=55)
debugSignalLine = input(title="Debug Signal Line", type=float, defval=7000)

shortestEMA = ema(close, shortestPeriod)
shortEMA = ema(close, shortPeriod)
mediumEMA = ema(close, mediumPeriod)
longestEMA = ema(close, longestPeriod)
rsiVal = rsi(close, 14)
volumeMA=sma(volume, 20)

isPositionClosed() =>
    openPositionSize == 0

isLongPositionOpen() =>
    openPositionSize > 0

isShortPositionOpen() =>
    openPositionSize < 0
    
isAllowedShortTrading() =>
    traderType == "All"
    
rsiEligibleForOpenLong() =>
    rsiVal > 60
    
rsiEligibleForOpenShort() =>
    rsiVal < 40
    
isVolumeSpikedNBars(numBars, spikeRatio, spikeAboveMARatio) =>
    result = false
    for i = 1 to numBars
        if(volume > volumeMA * spikeAboveMARatio and volume > volume[i] * spikeRatio)
            result := true
    result

isPrematureCloseLong() =>
    open >= longestEMA and close <= longestEMA and isVolumeSpikedNBars(2, 3, 2)

isPrematureCloseShort() =>
    open <= longestEMA and close >= longestEMA and isVolumeSpikedNBars(2, 3, 2)

isGreenCandle() =>
    close > open
    
isRedCandle() =>
    close < open

isAllEmasBullishOrdered() =>
    longestEMA < mediumEMA and mediumEMA < shortEMA and shortEMA < shortestEMA

isAllEmasBearishOrdered() =>
    longestEMA > mediumEMA and mediumEMA > shortEMA and shortEMA > shortestEMA

isAllEmasBullishUnOrdered() =>
    longestEMA < mediumEMA and longestEMA < shortEMA and longestEMA < shortestEMA

isAllEmasBearishUnOrdered() =>
    longestEMA > mediumEMA and longestEMA > shortEMA and longestEMA > shortestEMA

// Calculate signal to determine whether eligible to open a new position
openLongPositionCriteria = isPositionClosed() and isVolumeSpikedNBars(4, 7, 2) and (crossover(shortestEMA, longestEMA) and rsiEligibleForOpenLong() or isGreenCandle() and isAllEmasBullishUnOrdered())  
openShortPositionCriteria = isAllowedShortTrading() and isPositionClosed() and isVolumeSpikedNBars(4, 7, 2) and (crossunder(shortestEMA, longestEMA) and rsiEligibleForOpenShort() or isRedCandle() and isAllEmasBearishUnOrdered())
signalOpenPosition = iff(openLongPositionCriteria == true, 1, iff(openShortPositionCriteria == true, -1, na)) 
// Calculate signal to determine whether eligible to close existing position
closeLongPositionCriteria = isLongPositionOpen() and (crossunder(shortestEMA, longestEMA) or isPrematureCloseLong())
closeShortPositionCriteria = isAllowedShortTrading() and isShortPositionOpen() and (crossover(shortestEMA, longestEMA) or isPrematureCloseShort())
signalClosePosition = iff(closeLongPositionCriteria == true, -1 , iff(closeShortPositionCriteria == true, 1, na)) 

//plotchar(debugSignalLine+sss*debugSignalLine*0.03, color=#00ff00ff, location=location.absolute, char='o')
//plotchar(debugSignalLine*1.1+signalClosePosition*debugSignalLine*0.03, color=#ff0000ff, location=location.absolute, char='o')

plotarrow(signalClosePosition, offset=0, colorup=#fc28fcff, colordown=#773f0fff, maxheight=150, minheight=130, transp=0)
plotarrow(signalOpenPosition, colorup=#fc28fcff, colordown=#773f0fff, maxheight=150, minheight=130, transp=0)

openPositionSize := iff(signalOpenPosition == 1, 1, iff(signalOpenPosition == -1, -1, openPositionSize))
openPositionSize := iff(signalClosePosition == 1 or signalClosePosition == -1, 0, openPositionSize)

alertcondition(signalOpenPosition != 0, title='4 MA Alert - Signal to Open Position', message='Signal to Open Position!')
alertcondition(signalClosePosition != 0, title='4 MA Alert - Signal to Close Position', message='Signal to Close Position!')
