//@version=3
strategy("S011 EMA CrossOver v1.0 Strategy", shorttitle = "S011 EMA CrossOver v1.0 str", overlay=true, initial_capital=100000, default_qty_type=strategy.cash, default_qty_value=10000, commission_type=strategy.commission.percent, commission_value=0.15, pyramiding = 0) 
  
//////////////////////////////////////////////////////////////
// **************** S011 EMA CrossOver Strategy - v1.0 *********************
////////////////////////////////////////////////////////////// 

openPositionSize = 0.0 
openPositionSize := nz(openPositionSize[1], 0.0)

needlong = input(true, defval = true, title = "Long")
needshort = input(true, defval = true, title = "Short")
ema_ratio = input(0.5, defval = 0.5, minval = 0.01, maxval = 0.99, title = "EMA Fast/Slow Period Ratio")
slow_ema_period = input(200, defval = 200, minval = 60, maxval = 400, title = "Slow EMA Period")
fromyear = input(2018, defval = 1900, minval = 1900, maxval = 2100, title = "From Year")
toyear = input(2018, defval = 2100, minval = 1900, maxval = 2100, title = "To Year")
frommonth = input(1, defval = 01, minval = 01, maxval = 12, title = "From Month")
tomonth = input(12, defval = 12, minval = 01, maxval = 12, title = "To Month")
fromday = input(1, defval = 01, minval = 01, maxval = 31, title = "From day")
today = input(31, defval = 31, minval = 01, maxval = 31, title = "To day")
debugSignalLine = input(title="Debug Signal Line", type=float, defval=7000)

fast_ema_period = round(ema_ratio * slow_ema_period)
fastEMA = ema(close, fast_ema_period)
slowEMA = ema(close, slow_ema_period)

isLongPositionOpen() =>
    openPositionSize > 0

isShortPositionOpen() =>
    openPositionSize < 0
    
isEmaCrossover(firstEMA, secondEMA) =>
    not na(firstEMA) and not na(secondEMA) and crossover(firstEMA, secondEMA)

// Calculate signal to determine whether eligible to open a new position
openLongPositionCriteria = isEmaCrossover(fastEMA, slowEMA)
openShortPositionCriteria = isEmaCrossover(slowEMA, fastEMA)
signalOpenPosition = iff(openLongPositionCriteria == true, 1, iff(openShortPositionCriteria == true, -1, na)) 

//plotchar(debugSignalLine+sss*debugSignalLine*0.03, color=#00ff00ff, location=location.absolute, char='o')
//plotchar(debugSignalLine + sss, color=#ff0000ff, location=location.absolute, char='o')

openPositionSize := iff(signalOpenPosition == 1, 1, iff(signalOpenPosition == -1, -1, openPositionSize))

//Signals
up = signalOpenPosition == 1
dn = signalOpenPosition == -1
 
//Trading
if up
    strategy.entry("Long", strategy.long, needlong == false ? 0 : na, when=(time > timestamp(fromyear, frommonth, fromday, 00, 00) and time < timestamp(toyear, tomonth, today, 23, 59)))

if dn
    strategy.entry("Short", strategy.short, needshort == false ? 0 : na, when=(time > timestamp(fromyear, frommonth, fromday, 00, 00) and time < timestamp(toyear, tomonth, today, 23, 59)))
    
if time > timestamp(toyear, tomonth, today, 23, 59)
    strategy.close_all()
