//@version=3
strategy(title = "Alex (Noro) Robot BitMEX Fast RSI v1.0", shorttitle = "Alex (Noro) Robot BitMEX Fast RSI v1.0", overlay = false)
//Settings
needlong = input(true, defval = true, title = "Long")
needshort = input(true, defval = true, title = "Short")
capital = input(98, defval = 100, minval = 1, maxval = 10000, title = "Lot, %")
rsiperiod = input(7, defval = 7, minval = 2, maxval = 100, title = "RSI period")
rsibars = input(3, defval = 3, minval = 1, maxval = 20, title = "RSI signals")
rsilong = input(30, defval = 30, minval = 1, maxval = 50, title = "RSI Long")
rsishort = input(70, defval = 70, minval = 50, maxval = 99, title = "RSI Short")
useocf = input(true, defval = true, title = "Use Open Color Filter")
useccf = input(true, defval = true, title = "Use Close Color Filter")
openbars = input(3, defval = 3, minval = 1, maxval = 20, title = "Open Color, Bars")
closebars = input(1, defval = 1, minval = 1, maxval = 20, title = "Close Color, Bars")
useobf = input(true, defval = true, title = "Use Open Body Filter")
usecbf = input(true, defval = true, title = "Use Close Body Filter")
openbody = input(20, defval = 20, minval = 0, maxval = 1000, title = "Open Body Minimum, %")
closebody = input(20, defval = 20, minval = 0, maxval = 1000, title = "Close Body Minimum, %")
showrsi = input(true, defval = true, title = "Show indicator RSI")
fromyear = input(1900, defval = 1900, minval = 1900, maxval = 2100, title = "From Year")
toyear = input(2100, defval = 2100, minval = 1900, maxval = 2100, title = "To Year")
frommonth = input(01, defval = 01, minval = 01, maxval = 12, title = "From Month")
tomonth = input(12, defval = 12, minval = 01, maxval = 12, title = "To Month")
fromday = input(01, defval = 01, minval = 01, maxval = 31, title = "From Day")
today = input(31, defval = 31, minval = 01, maxval = 31, title = "To Day")
//RSI
uprsi = rma(max(change(close), 0), rsiperiod)
dnrsi = rma(-min(change(close), 0), rsiperiod)
rsi = dnrsi == 0 ? 100 : uprsi == 0 ? 0 : 100 - (100 / (1 + uprsi / dnrsi))
rsidn = rsi < rsilong ? 1 : 0
rsiup = rsi > rsishort ? 1 : 0
rsidnok = sma(rsidn, rsibars) == 1
rsiupok = sma(rsiup, rsibars) == 1
//Body Filter
body = abs(close - open)
abody = sma(body, 10)
openbodyok = body >= abody / 100 * openbody or useobf == false
closebodyok = body >= abody / 100 * closebody or usecbf == false
//Color Filter
bar = close > open ? 1 : close < open ? -1 : 0
gbar = bar == 1 ? 1 : 0
rbar = bar == -1 ? 1 : 0
opengbarok = sma(gbar, openbars) == 1 or useocf == false
openrbarok = sma(rbar, openbars) == 1 or useocf == false
closegbarok = sma(gbar, closebars) == 1 or useccf == false
closerbarok = sma(rbar, closebars) == 1 or useccf == false
//Signals
size = strategy.position_size
up = openrbarok and rsidnok and openbodyok and (size == 0 or close < strategy.position_avg_price)
dn = opengbarok and rsiupok and openbodyok and (size == 0 or close > strategy.position_avg_price)
exit = ((size > 0 and closegbarok and rsi > rsilong) or (size < 0 and closerbarok and rsi < rsishort)) and closebodyok
lot = 0.0 
lot := size == 0 ? strategy.equity / close * capital / 100 : lot[1]
//Indicator
rsicol = showrsi ? blue : na
limcol = showrsi ? black : na
rsiind = showrsi ? rsi : 0
upopeningind = showrsi ? rsishort : 0
dnopeningind = showrsi ? rsilong : 0
plot(rsiind, color = rsicol, linewidth = 3, title = "RSI")
plot(rsishort, color = limcol, title = "Upper Limit RSI")
plot(rsilong, color = limcol, title = "Lower Limit RSI")
plot(0, color = na)
plot(100, color = na)
colbg = showrsi == false ? na : rsi > rsishort ? red : rsi < rsilong ? lime : na
bgcolor(colbg, transp = 20)
//Trading
if up
    if strategy.position_size < 0
        strategy.close_all()
        
    strategy.entry("Long", strategy.long, needlong == false ? 0 : lot, when=(time > timestamp(fromyear, frommonth, fromday, 00, 00) and time < timestamp(toyear, tomonth, today, 23, 59)))
if dn
    if strategy.position_size > 0
        strategy.close_all()
        
    strategy.entry("Short", strategy.short, needshort == false ? 0 : lot, when=(time > timestamp(fromyear, frommonth, fromday, 00, 00) and time < timestamp(toyear, tomonth, today, 23, 59)))
    
if time > timestamp(toyear, tomonth, today, 23, 59) or exit
    strategy.close_all()